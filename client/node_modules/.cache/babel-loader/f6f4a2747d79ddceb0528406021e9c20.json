{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH } from '../constants/actionTypes';\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case FETCH:\n      return posts.map(post => post.id === action.payload._id);\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["C:/Users/Usha/Desktop/family_moment/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH","posts","action","type","payload","map","post","id","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,KAAlD,QAA+D,0BAA/D;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAOO,MAAM,CAACE,OAAd;;AACF,SAAKJ,KAAL;AACE,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeI,GAA/C,CAAP;;AACF,SAAKT,IAAL;AACE,aAAOE,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAA5B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACF,SAAKV,MAAL;AACE,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOI,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAA5B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACF,SAAKR,MAAL;AACE,aAAOG,KAAK,CAACQ,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaN,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n    case FETCH:\r\n      return posts.map((post) => post.id === action.payload._id);\r\n    case LIKE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}